var documenterSearchIndex = {"docs":
[{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"DocTestSetup = quote\n    using AbstractAlgebra\n    using BracketAlgebras\nend","category":"page"},{"location":"bracket_algebra/#The-Bracket-Algebra","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Let x_1 dots x_n subset P^d be n points in projective space. The algebra generated by the d+1 times d+1-minors of the matrix","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"X = beginpmatrix x_11  dots  x_1d  1   vdots   x_n1  dots  x_nd  1  endpmatrix","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"is called the bracket algebra mathcalB_nd Let Lambda coloneqq Lambda(nd+1) coloneqq lambda_1 dots lambda_d+1 mid 1leq lambda_1  dots  lambda_d+1 leq n and set lambda_pi(1) dots lambda_pi(d) = mathrmsgn(pi)lambda_1 dots lambda_d in mathbbC(Lambda). Then ","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"mathbbCLambda  I to mathcalB_nd lambda_1 dots lambda_d+1 mapsto \ndet beginpmatrix x_lambda_1 1  dots  x_lambda_1 d  1 \n vdots  \nx_lambda_d+1 1  dots  x_lambda_d+1 d  1 endpmatrix","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"defines an isomorphism, where I is the ideal generated by the so called Plücker relations <!– Todo –> We identify the elements of the bracket algebra with its corresponding preimage in mathbbCLambdaI. We define a monomial ordering on the elements of mathbbCLambda. For lambda = lambda_1 dots lambda_d+1 mu = mu_1 dots mu_d+1 in Lambda we set lambda leq mu if and only if for some 1leq m leq d+1 we have lambda_i = mu_i for all 1leq i leq m and lambda_m+1 leq mu_m+1, i.e. lambda is smaller in the first entry lambda and mu differ. The degree reverse lexicographic ordering extending this ordering of the variables is called the tableaux ordering.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"","category":"page"},{"location":"bracket_algebra/#Basic-bracket-algebra-functionality","page":"The Bracket Algebra","title":"Basic bracket algebra functionality","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"This package implements bracket algebras using the ring interface of the Julia package AbstractAlgebra.jl. As is usual for AbstractAlgebra rings, a bracket algebra is an object of type BracketAlgebra and the elements of a bracket algebra are objects of type BracketAlgebraElem.","category":"page"},{"location":"bracket_algebra/#Constructing-Bracket-Algebras","page":"The Bracket Algebra","title":"Constructing Bracket Algebras","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Bracket algebras in this package are BracketAlgebra objects.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"BracketAlgebra","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.BracketAlgebra","page":"The Bracket Algebra","title":"BracketAlgebras.BracketAlgebra","text":"BracketAlgebra{T<:RingElement} <: AbstractBracketAlgebra{T}\n\nBracket algebra with coefficients of type T.\n\nFields\n\nd::Int: dimension of the underlying projective space P^d\nn::Int: number of points considered\nR::MPolyRing{T}: AbstractAlgebra multivariate polynomial ring representing the elements of the bracket algebra (for internal use)\npoint_ordering::Vector{Int}: ordering of the n point indices, that induces the tableaux order. point_ordering[1] < point_ordering[2] < ... < point_ordering[n]. \nvariables::Bijection{Vector{Int},<:MPolyRingElem{T}}: bijection from brackets to the corresponding monomials in the polynomial ring R\npoint_labels::Vector: point labels for each point\n\n\n\n\n\n","category":"type"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"To construct the bracket algebra mathcalB_63, you can call","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> BracketAlgebra(6,3)\nBracket algebra over P^3 on 6 points with point ordering 1 < 2 < 3 < 4 < 5 < 6 and coefficient ring Integers.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The standard labels for the n points is 1:n. You can give different labels to the points by calling","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> labels = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\njulia> BracketAlgebra(6, 3, point_labels=labels)\nBracket algebra over P^3 on 6 points with point ordering a < b < c < d < e < f and coefficient ring Integers.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Note that if the point labels are integers, they are always expected to be equal to 1:n.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> BracketAlgebra(6,3,point_labels=[2,1,3,4,5,6])\nERROR: When point_labels is a Vector of Integers, it must equal collect(1:n)","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"You can also construct bracket algebras with different orderings of the points. This translates to changing the ordering in the elements of Lambda above.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> labels = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\n\njulia> BracketAlgebra(6, 3, point_labels=labels)\nBracket algebra over P^3 on 6 points with point ordering a < b < c < d < e < f and coefficient ring Integers.\n\njulia> BracketAlgebra(6, 3, [2,1,3,4,5,6], point_labels=labels)\nBracket algebra over P^3 on 6 points with point ordering b < a < c < d < e < f and coefficient ring Integers.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"To access the contents of the fields of a BracketAlgebra the following access functions are provided","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"n\nd\npoint_ordering\npoint_labels","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.n","page":"The Bracket Algebra","title":"BracketAlgebras.n","text":"n(B::BracketAlgebra)\n\nReturn the number of points considered in the bracket algebra B.\n\njulia> n(BracketAlgebra(6,3))\n6\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/#BracketAlgebras.d","page":"The Bracket Algebra","title":"BracketAlgebras.d","text":"d(B::BracketAlgebra)\n\nReturn the dimension of the projective space P^d underlying the bracket algebra B.\n\nExamples\n\njulia> d(BracketAlgebra(6,3))\n3\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/#BracketAlgebras.point_ordering","page":"The Bracket Algebra","title":"BracketAlgebras.point_ordering","text":"point_ordering(B::BracketAlgebra)\n\nReturn the ordering of the n points in the bracket algebra B, that induces the tableaux order.\n\nExamples\n\njulia> point_ordering(BracketAlgebra(6,3,[2,1,3,4,5,6]))\n6-element Vector{Int64}:\n 2\n 1\n 3\n 4\n 5\n 6\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/#BracketAlgebras.point_labels","page":"The Bracket Algebra","title":"BracketAlgebras.point_labels","text":"point_labels(B::BracketAlgebra)\n\nReturn the point labels of the bracket algebra B.\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"To change the point ordering of an existing bracket algebra call","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"point_ordering!","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.point_ordering!","page":"The Bracket Algebra","title":"BracketAlgebras.point_ordering!","text":"point_ordering!(B::BracketAlgebra, point_ordering::AbstractVector{<:Integer}=collect(1:B.n))\n\nUpdate the point ordering of the bracket algebra B to point_ordering and return the updated bracket algebra.\n\nWarning: changing the point ordering will not change the representation of already generated elements of B, which leads to wrong results when working with these elements. It is recommended to create a new bracket algebra with the desired point ordering instead. \n\nExamples\n\njulia> point_ordering!(BracketAlgebra(6,3), [6,5,4,3,2,1])\nBracket algebra over P^3 on 6 points with point ordering 6 < 5 < 4 < 3 < 2 < 1 and coefficient ring Integers.\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"warning: Warning\nChanging the point ordering of an existing BracketAlgebra will not update the point ordering in the internal representation of the already constructed BracketAlgebraElem, even though they will have the updated bracket algebra as a parent object.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The generators of a bracket algebra, i.e. the brackets in the bracket algebra, can be computed by AbstractAlgebra.gens. ","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> gens(BracketAlgebra(4,2))\n4-element Vector{BracketAlgebraElem{BigInt}}:\n [2, 3, 4]\n [1, 3, 4]\n [1, 2, 4]\n [1, 2, 3]\n\njulia> gens(BracketAlgebra(4,2,[2,1,3,4]))\n4-element Vector{BracketAlgebraElem{BigInt}}:\n [1, 3, 4]\n [2, 3, 4]\n [2, 1, 4]\n [2, 1, 3]","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"To change the point labels of an existin bracket algebra call","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"point_labels!","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.point_labels!","page":"The Bracket Algebra","title":"BracketAlgebras.point_labels!","text":"point_labels!(B::BracketAlgebra, new_labels::AbstractVector)\n\nUpdate the point labels of the bracket algebra B and return the resulting bracket algebra. If new_labels is a vector of integers, it is expected to be equal to collect(1:n(B)).\n\nExamples\n\njulia> point_labels!(BracketAlgebra(6,3), [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"])\nBracket algebra over P^3 on 6 points with point ordering a < b < c < d < e < f and coefficient ring Integers.\n\njulia> point_labels!(BracketAlgebra(6,3), [2,1,3,4,5,\"a\"])\nBracket algebra over P^3 on 6 points with point ordering 2 < 1 < 3 < 4 < 5 < a and coefficient ring Integers.\n\njulia> point_labels!(BracketAlgebra(6,3), [2,1,3,4,5,6])\nERROR: When point_labels is a Vector of Integers, it must equal collect(1:n)\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The coefficient ring of the bracket algebra can be accessed via AbstractAlgebra.base_ring","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> base_ring(BracketAlgebra(4,2,[1,2,3,4],Rational{BigInt}))\nRationals\n\njulia> base_ring(BracketAlgebra(4,2,[1,2,3,4],BigInt))\nIntegers\n\njulia> base_ring(BracketAlgebra(4,2,[1,2,3,4],AbstractAlgebra.GF(13)))\nFinite field F_13","category":"page"},{"location":"bracket_algebra/#Constructing-bracket-algebra-elements","page":"The Bracket Algebra","title":"Constructing bracket algebra elements","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The elements of a bracket algebra are BracketAlgebraElem objects.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"BracketAlgebraElem","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.BracketAlgebraElem","page":"The Bracket Algebra","title":"BracketAlgebras.BracketAlgebraElem","text":"BracketAlgebraElem{T<:Union{RingElem,Number}} <: AbstractBracketAlgebraElem{T}\n\nElement type for BracketAlgebra with coefficients of type T.\n\nFields\n\nparent::BracketAlgebra{T}: parent object of the bracket algebra element.\npolynomial::MPolyRingElem{T}: polynomial in parent.R that represents the element.\n\n\n\n\n\n","category":"type"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The easiest way to construct bracket algebra elements is to first construct a bracket algebra B and then constructing the elements with B(bracket), where bracket is a vector of point labels of length d(B)+1, as in the following example","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4, 2, point_labels = [\"a\",\"b\",\"c\",\"d\"])\nBracket algebra over P^2 on 4 points with point ordering a < b < c < d and coefficient ring Integers.\n\njulia> B([\"a\",\"b\",\"c\"])\n[\"a\", \"b\", \"c\"]","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"You can also generate a bracket algebra element in the same way by providing the indices of the labels.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4, 2, point_labels = [\"a\",\"b\",\"c\",\"d\"])\nBracket algebra over P^2 on 4 points with point ordering a < b < c < d and coefficient ring Integers.\n\njulia> B([1,2,3])\n[\"a\", \"b\", \"c\"]","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Brackets are alternating, therefore","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4, 2, point_labels = [\"a\",\"b\",\"c\",\"d\"])\nBracket algebra over P^2 on 4 points with point ordering a < b < c < d and coefficient ring Integers.\n\njulia> B([2,1,3])\n - [\"a\", \"b\", \"c\"]\n\njulia> B([2,2,3])\n0","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Elements a of the coefficient ring of a bracket algebra B can be coerced into the bracket algebra by calling B(a). B() will construct the zero element of B. zero(B) and one(B) are also implemented to return the zero and one element of B as well as methods for functions iszero(b) and isone(b) to check whether a bracket algebra element is the zero or one element.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4, 2)\nBracket algebra over P^2 on 4 points with point ordering 1 < 2 < 3 < 4 and coefficient ring Integers.\n\njulia> B(1)\n1\n\njulia> typeof(B(1))\nBracketAlgebraElem{BigInt}\n\njulia> B()\n0\n\njulia> zero(B)\n0\n\njulia> one(B)\n1\n\njulia> isone(one(B))\ntrue\n\njulia> iszero(zero(B))\ntrue","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Brackets can be added, multiplied and multiplied with elements of the base ring to form more complex bracket expressions. Internally they are stored according to the tableaux ordering, which is also why it is not recommended to change the point ordering of a bracket algebra, which already has existing elements (see point_ordering!).","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4, 2)\nBracket algebra over P^2 on 4 points with point ordering 1 < 2 < 3 < 4 and coefficient ring Integers.\n\njulia> B([1,2,3])*B([2,3,4]) + 2*B([1,2,4])^2 - B([2,3,4])*B([1,3,4])\n - [2, 3, 4][1, 3, 4] + 2[1, 2, 4]^2 + [2, 3, 4][1, 2, 3]","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"It is also possible to construct bracket algebra expressions by providing a vector of coefficients and a vector of exponent vectors of an expression.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4, 2)\nBracket algebra over P^2 on 4 points with point ordering 1 < 2 < 3 < 4 and coefficient ring Integers.\n\njulia> gens(B)\n4-element Vector{BracketAlgebraElem{BigInt}}:\n [2, 3, 4]\n [1, 3, 4]\n [1, 2, 4]\n [1, 2, 3]\n\njulia> B([1,-2], [[1,2,3,4], [1,0,0,1]])\n[2, 3, 4][1, 3, 4]^2[1, 2, 4]^3[1, 2, 3]^4 - 2[2, 3, 4][1, 2, 3]","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The bracket algebra that a BracketAlgebraElem object b is an element of can be accessed via parent(b)","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4, 2)\nBracket algebra over P^2 on 4 points with point ordering 1 < 2 < 3 < 4 and coefficient ring Integers.\n\njulia> b = B([1,2,3])\n[1, 2, 3]\n\njulia> parent(b) === B\ntrue","category":"page"},{"location":"bracket_algebra/#Arithmetic-operations-for-bracket-algebra-elements","page":"The Bracket Algebra","title":"Arithmetic operations for bracket algebra elements","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"For bracket algebra elements the following arithmetic operations are implemented:","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4,2)\nBracket algebra over P^2 on 4 points with point ordering 1 < 2 < 3 < 4 and coefficient ring Integers.\n\njulia> b1 = B([1,2,3]) * B([1,2,4]) + B([2,3,4])\n[1, 2, 4][1, 2, 3] + [2, 3, 4]\n\njulia> b2 = B([1,2,3]) * B([2,3,4])\n[2, 3, 4][1, 2, 3]\n\njulia> 2*b1 # multiplication with integers\n2[1, 2, 4][1, 2, 3] + 2[2, 3, 4]\n\njulia> -b1 # additive inverse\n - [1, 2, 4][1, 2, 3] - [2, 3, 4]\n\njulia> b1^3 # raising bracket algebra expressions to an integer power\n[1, 2, 4]^3[1, 2, 3]^3 + 3[2, 3, 4][1, 2, 4]^2[1, 2, 3]^2 + 3[2, 3, 4]^2[1, 2, 4][1, 2, 3] + [2, 3, 4]^3\n\njulia> b1+b2 # addition of bracket algebra elements\n[2, 3, 4][1, 2, 3] + [1, 2, 4][1, 2, 3] + [2, 3, 4]\n\njulia> b1-b2 # subtraction of bracket algebra elements\n - [2, 3, 4][1, 2, 3] + [1, 2, 4][1, 2, 3] + [2, 3, 4]\n\njulia> b1*b2 # multiplication of bracket algebra elements\n[2, 3, 4][1, 2, 4][1, 2, 3]^2 + [2, 3, 4]^2[1, 2, 3]","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"We can also compare representatives of bracket algebra monomials with regards to the tableuaux ordering.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4,2)\nBracket algebra over P^2 on 4 points with point ordering 1 < 2 < 3 < 4 and coefficient ring Integers.\n\njulia> b1 = B([1,2,3]) * B([2,3,4])\n[2, 3, 4][1, 2, 3]\n\njulia> b2 = B([1,2,3]) * B([1,2,4])\n[1, 2, 4][1, 2, 3]\n\njulia> b3 = B([2,3,4])\n[2, 3, 4]\n\njulia> b1 < b2\nfalse\n\njulia> b1 > b2\ntrue\n\njulia> b1 > b3\ntrue","category":"page"},{"location":"bracket_algebra/#Bracket-algebra-elements-as-polynomials","page":"The Bracket Algebra","title":"Bracket algebra elements as polynomials","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"We can query information about the chosen representative in mathbbCLambda of a bracket algebra element as a polynomial. These are implemented as extensions of functions in the AbstractAlgebra.jl package.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4,2);\n\njulia> b = B([1,2,3]) * B([2,3,4]) + 2*B([1,3,4]) * B([1,2,3])\n[2, 3, 4][1, 2, 3] + 2[1, 3, 4][1, 2, 3]\n\njulia> length(b) # number of terms of b\n2\n\njulia> degrees(b) # degree of b in gens(parent(b))\n4-element Vector{Int64}:\n 1\n 1\n 0\n 1\n\njulia> total_degree(b) # tatal degree of b\n2\n\njulia> collect(coefficients(b)) # coefficients of the terms of b in tableaux ordering\n2-element Vector{BigInt}:\n 1\n 2\n\njulia> collect(monomials(b)) # monomials making up the terms of b in tableaux ordering\n2-element Vector{BracketAlgebraElem{BigInt}}:\n [2, 3, 4][1, 2, 3]\n [1, 3, 4][1, 2, 3]\n\njulia> collect(terms(b)) # terms of b in tableaux ordering\n2-element Vector{BracketAlgebraElem{BigInt}}:\n [2, 3, 4][1, 2, 3]\n 2[1, 3, 4][1, 2, 3]\n\njulia> collect(exponent_vectors(b)) # exponent vectors of terms of b in tableaux ordering\n2-element Vector{Vector{Int64}}:\n [1, 0, 0, 1]\n [0, 1, 0, 1]\n\njulia> coeff(b, 2) # coefficient of second term\n2\n\njulia> coeff(b, [0,1,0,1]) # coefficient of the term with exponent vector [0,1,0,1]\n2\n\njulia> monomial(b, 2) # monomial of second term\n[1, 3, 4][1, 2, 3]\n\njulia> exponent_vector(b, 2) # exponent vector of second term\n4-element Vector{Int64}:\n 0\n 1\n 0\n 1\n\njulia> term(b, 2) # second term\n2[1, 3, 4][1, 2, 3]\n\njulia> leading_term(b) # leading term of b\n[2, 3, 4][1, 2, 3]\n\njulia> leading_monomial(b) # leading monomial of b\n[2, 3, 4][1, 2, 3]\n\njulia> leading_coefficient(b) # leading coefficient of b\n1","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"note: Note\nNote that these notions are not well defined for bracket algebra expressions. They are calculated for the chosen representative in mathbbCLambda.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"You can evaluate a bracket expression b of a bracket algebra B at a coordinization of the points in homogeneous coordinates. For that provide the coordinization as a dtimes n matrix, where the columns correspond to the point coordinates and call evaluate(b, coordinization)","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(4,2);\n\njulia> b = B([2,3,4]) * B([1,2,4])\n[2, 3, 4][1, 2, 4]\n\njulia> coordinization = [0 1 0 1; 0 0 1 1]\n2×4 Matrix{Int64}:\n 0  1  0  1\n 0  0  1  1\n\njulia> evaluate(b, coordinization)\n-1.0\n\njulia> x = hcat(transpose(coordinization), ones(4,1)) # matrix X as in introduction\n4×3 Matrix{Float64}:\n 0.0  0.0  1.0\n 1.0  0.0  1.0\n 0.0  1.0  1.0\n 1.0  1.0  1.0\n\njulia> det(x[[2,3,4], :]) * det(x[[1,2,4], :])\n-1.0","category":"page"},{"location":"bracket_algebra/#Straightening","page":"The Bracket Algebra","title":"Straightening","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"We want to define a normal form for bracket algebra elements. This is achieved by the isomorphism mathcalB_nd cong mathbbCLambdaI. ","category":"page"},{"location":"bracket_algebra/#Straightening-syziges","page":"The Bracket Algebra","title":"Straightening syziges","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Let 1leq s leq d+1, alpha in Lambda(n s-1), beta in Lambda(n d+2) and gamma in Lambda(n d + 1 - s). For tau = tau_1  dots tau_ssubset 1 dots d+2 let tau^ast = 1 dots d+2 setminus tau = tau^ast_1  dots  tau^ast_d+2-s and","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"mathrmsgn(tau* tau) = mathrmsgn beginpmatrix\n1  2  3  dots  d+2-s  d+2-s+1  dots  d+2 \ntau^ast_1  tau^ast_2  tau^ast_3  dots  tau^ast_d+2-s  tau_1  dots  tau_s \nendpmatrix","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"We define the straightening syzige ","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"alpha dotbeta gamma = sum_tau in mathrmPot_s(underlined+2) mathrmsgn(tau* tau) alpha_1 dots alpha_s-1 beta_tau^ast_1 dots beta_tau^ast_d+2-sbeta_tau_1 dots beta_tau_s gamma_1 dots gamma_d+1-s in mathbbC(Lambda)","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The straightening syzige of \\alpha, \\beta and \\gamma in a bracket algebra B can be constructed using the function straightening_syzige","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"straightening_sizyge","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.straightening_sizyge","page":"The Bracket Algebra","title":"BracketAlgebras.straightening_sizyge","text":"straightening_sizyge(α::Vector{<:Integer}, β::Vector{<:Integer}, γ::Vector{<:Integer}, B::BracketAlgebra)\n\nReturn the straightening_sizyge corresponding to α, β, γ as an element of the bracket algebra B. The lenghts of the vectors have to fulfill length(β)==d(B)+2 and length(γ)==d(B)-length(α)\n\nExamples\n\njulia> B = BracketAlgebra(6,2)\nBracket algebra over P^2 on 6 points with point ordering 1 < 2 < 3 < 4 < 5 < 6 and coefficient ring Integers.\n\njulia> α = [1]\n1-element Vector{Int64}:\n 1\n\njulia> β = [5,6,2,3]\n4-element Vector{Int64}:\n 5\n 6\n 2\n 3\n\njulia> γ = [4]\n1-element Vector{Int64}:\n 4\n\njulia> straightening_sizyge(α, β, γ, B)\n[2, 3, 4][1, 5, 6] + [2, 4, 5][1, 3, 6] - [2, 4, 6][1, 3, 5] - [3, 4, 5][1, 2, 6] + [3, 4, 6][1, 2, 5] + [4, 5, 6][1, 2, 3]\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/#Tabloids","page":"The Bracket Algebra","title":"Tabloids","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Further we need to introduce the notions of tabloids. Let lambda_1dotslambda_k in mathbbCLambda be a monomial, such that lambda_1leq dots leq lambda_k. The associated tabloid to the monomial is ","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"    beginpmatrix\n        lambda_1 \n        vdots \n        lambda_k\n    endpmatrix","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"In this package tabloids are objects of the struct Tabloid.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"Tabloid","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.Tabloid","page":"The Bracket Algebra","title":"BracketAlgebras.Tabloid","text":"Tabloid\n\nA tabloid with ordered rows. \n\nFields\n\n-matrix::Matrix{Int}: Matrix representation of the tabloid. -ordering::Vector{Int}: Ordering of the entries of the tabloids. ordering[1] < ordering[2] < ...\n\n\n\n\n\n","category":"type"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"We can associate a tabloid to a bracket algebra monomial by the tabloid corresponding to its representative.  A tabloid is said to be standard, iff its rows are ordered.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"standard_violation\nis_standard","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.standard_violation","page":"The Bracket Algebra","title":"BracketAlgebras.standard_violation","text":"standard_violation(t::Tabloid)\n\nReturn the index of the first violation to the standardness of the tabloid t, i.e. the first index where t[i,j] > t[i+1, j] with regard to the ordering. Otherwise return nothing.\n\nExamples:\n\njulia> standard_violation(Tabloid([1 2 3; 1 4 5; 1 5 6; 2 3 4], [1,2,3,4,5,6]))\nCartesianIndex(3, 2)\n\njulia> standard_violation(Tabloid([1 2 3; 1 2 4], [1,2,3,4]))\n\n\n\n\n\n\nstandard_violation(b::BracketAlgebraElem)\n\nReturn the index of the first standard violation of the tabloid corresponding to b.\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/#BracketAlgebras.is_standard","page":"The Bracket Algebra","title":"BracketAlgebras.is_standard","text":"is_standard(t::Tabloid)\n\nReturn whether the tabloid t is standard. See also standard_violation.\n\n\n\n\n\nis_standard(b::BracketAlgebraElem)\n\nReturn whether the tabloid correspondong to the bracket algebra element b is standard. See also standard_violation.\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/#The-straightening-algorithm","page":"The Bracket Algebra","title":"The straightening algorithm","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"It can be shown that the straightening syziges form a Groebner basis of the Ideal I with mathcalB_nd cong mathbbCLambdaI with regards to the tablueax order. The result of the reduction of an element with this Groebner basis will lead to a representative, in which the tabloid corresponding to each term is standard.  This Groebner basis reduction is called the straightening algorithm. It can be performed by iteratively adding appropriate multiples of straightening syziges to the representative until the tabloids corresponding to all monomials in the expression are standard. Let","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"beginpmatrix\nlambda_11 dots  lambda_1 d+1\nvdots \nlambda_k1  dots  lambda_k d+1\nendpmatrix","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"be a non standard tabloid corresponding to a term in a bracket algebra element b.  Let (rs) be the first index, where the tabloid is not standard, meaning lambda_rs  lambda_r+1s. Let alpha = lambda_r1 dots lambda_r s-1, beta = lambda_r s dots lambda_r d+1 lambda_r+1 1 dots lambda_r+1 s-1, gamma = lambda_r+1 s dots lambda_r+1 d+1, then b = b - lambda_11 dots lambda_1 d+1dots lambda_r-1 1 dots lambda_r-1 d+1 lambda_r+21 dots lambda_r+2 d+1dots lambda_k1 dots lambda_k d+1 alphadotbetagamma in mathcalB_nd, but the violation to the standardness occurs later in the tabloid of the adjusted term. Therefore the straightening algorithm terminates and returns a representative, where every term is standard. ","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"straighten","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.straighten","page":"The Bracket Algebra","title":"BracketAlgebras.straighten","text":"straighten(b::BracketAlgebraElem)\n\nPerform the straightening algorithm on the bracket algebra element b as in Stutrmfels 2008, Alg. 3.5.6. The straightening algorithm performs the groebner reduction of the bracket algebra element b with the straightening sizyges as a Groebner basis. The result is a normal form of b in which every term is standard. See also straightening_sizyge, standard_violation, is_standard.\n\nExamples\n\njulia> B = BracketAlgebra(6, 2)\nBracket algebra over P^2 on 6 points with point ordering 1 < 2 < 3 < 4 < 5 < 6 and coefficient ring Integers.\n\njulia> b = B([1,4,5])*B([1,5,6])*B([2,3,4])\n[2, 3, 4][1, 5, 6][1, 4, 5]\n\njulia> straighten(b)\n[2, 5, 6][1, 4, 5][1, 3, 4] - [3, 5, 6][1, 4, 5][1, 2, 4] + [4, 5, 6][1, 4, 5][1, 2, 3]\n\n\n\n\n\n","category":"function"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"The straightening algorithm makes it possible to decide if two elements are equal as by basic Groebner basis results two elements of a bracket algebra are equal if and only if their representative after Groebner basis reduction (after straightening in the case of bracket algebras) are equal.","category":"page"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"julia> B = BracketAlgebra(6,2)\nBracket algebra over P^2 on 6 points with point ordering 1 < 2 < 3 < 4 < 5 < 6 and coefficient ring Integers.\n\njulia> α = [1,2]\n2-element Vector{Int64}:\n 1\n 2\n\njulia> β = [2,3,4,5]\n4-element Vector{Int64}:\n 2\n 3\n 4\n 5\n\njulia> γ = Int[]\nInt64[]\n\njulia> straighten(straightening_sizyge(α, β, γ, B))\n0\n\njulia> straightening_sizyge(α, β, γ, B) == zero(B)\ntrue\n\njulia> b = B([1,4,5])*B([1,5,6])*B([2,3,4])\n[2, 3, 4][1, 5, 6][1, 4, 5]\n\njulia> straighten(b)\n[2, 5, 6][1, 4, 5][1, 3, 4] - [3, 5, 6][1, 4, 5][1, 2, 4] + [4, 5, 6][1, 4, 5][1, 2, 3]\n\njulia> b + B([2,3,4]) * straightening_sizyge(α, β, γ, B)\n[2, 3, 4][1, 5, 6][1, 4, 5] - [2, 3, 4]^2[1, 2, 5] + [2, 3, 5][2, 3, 4][1, 2, 4] - [2, 4, 5][2, 3, 4][1, 2, 3]\n\njulia> straighten(b + B([2,3,4]) * straightening_sizyge(α, β, γ, B))\n[2, 5, 6][1, 4, 5][1, 3, 4] - [3, 5, 6][1, 4, 5][1, 2, 4] + [4, 5, 6][1, 4, 5][1, 2, 3]\n\njulia> b == b + B([2,3,4]) * straightening_sizyge(α, β, γ, B)\ntrue","category":"page"},{"location":"bracket_algebra/#Atomic-extensors","page":"The Bracket Algebra","title":"Atomic extensors","text":"","category":"section"},{"location":"bracket_algebra/","page":"The Bracket Algebra","title":"The Bracket Algebra","text":"atomic_extensors","category":"page"},{"location":"bracket_algebra/#BracketAlgebras.atomic_extensors","page":"The Bracket Algebra","title":"BracketAlgebras.atomic_extensors","text":"atomic_extensors(b::BracketAlgebraElem)\n\nFind all atomic extensors of the bracket algebra elem b. These are the equivalence classes of the relation p1 ~ p2 iff substituting p1 = p2 in b results in the zero element of the parent bracket algebra.\n\nExamples\n\n```jldoctest\n\n\n\n\n\n","category":"function"},{"location":"","page":"Introduction","title":"Introduction","text":"CurrentModule = BracketAlgebras","category":"page"},{"location":"#BracketAlgebras","page":"Introduction","title":"BracketAlgebras","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Documentation for BracketAlgebras.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"A Julia package to do calculations in the bracket algebra mathcalB_nd. For further mathematical details refer to chapter 3 of Sturmfels, Bernd. 2008. Algorithms in Invariant Theory. 2nd ed. Texts & Monographs in Symbolic Computation. Springer Vienna. https://doi.org/10.1007/978-3-211-77417-5.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"The bracket algebra is implemented under the Ring interface of AbstractAlgebra.jl. To use BracketAlgebras.jl, AbstractAlgebra.jl should be loaded","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"using AbstractAlgebra\nusing BracketAlgebras","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"<!– @autodocs Modules = [BracketAlgebras] –>","category":"page"}]
}
